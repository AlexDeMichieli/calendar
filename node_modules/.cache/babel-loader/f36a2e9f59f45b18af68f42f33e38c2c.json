{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aless\\\\Desktop\\\\Calendar-app\\\\calendar-app\\\\src\\\\components\\\\Grid.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Grid = _ref => {\n  _s();\n\n  let {\n    month,\n    year\n  } = _ref;\n  const [daysOfMonth, setDaysOfMonth] = useState([]);\n  const [bb, setbb] = useState(month);\n  useEffect(() => {\n    console.log(\"month\", month); // const daysOfMonth = (month, year) => {\n    //   let date = new Date(year, month, 1);\n    //   let days = [];\n    //   while (date.getMonth() === month) {\n    //     let day = new Date(date).toLocaleDateString()\n    //     days.push(day);\n    //     date.setDate(date.getDate() + 1);\n    //   }\n    //   return days;\n    // }\n    // let allDaysOfMonth = daysOfMonth(bb, year)\n    // setDaysOfMonth(allDaysOfMonth);\n  }, [month, year]); //console.log(daysOfMonth)\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      className: \"thead-dark\",\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"Time In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"Time Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"Hours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: daysOfMonth && daysOfMonth.map((day, cell) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"row\",\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, day, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Grid, \"ecWwzw3/AjOqj1wewBBB/5QQrHM=\");\n\n_c = Grid;\nexport default Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useState","useEffect","Grid","month","year","daysOfMonth","setDaysOfMonth","bb","setbb","console","log","map","day","cell"],"sources":["C:/Users/aless/Desktop/Calendar-app/calendar-app/src/components/Grid.js"],"sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\n\r\n\r\nconst Grid = ({month,year}) => {\r\n  const [daysOfMonth, setDaysOfMonth] = useState([]);\r\n  const [bb, setbb] = useState(month)\r\n\r\nuseEffect(() => {\r\n  console.log(\"month\",month)\r\n  // const daysOfMonth = (month, year) => {\r\n  //   let date = new Date(year, month, 1);\r\n  //   let days = [];\r\n  //   while (date.getMonth() === month) {\r\n  //     let day = new Date(date).toLocaleDateString()\r\n  //     days.push(day);\r\n  //     date.setDate(date.getDate() + 1);\r\n  //   }\r\n  //   return days;\r\n  // }\r\n  // let allDaysOfMonth = daysOfMonth(bb, year)\r\n  // setDaysOfMonth(allDaysOfMonth);\r\n},[month, year]);\r\n\r\n//console.log(daysOfMonth)\r\n\r\n  return (\r\n    <table className=\"table\">\r\n      <thead className=\"thead-dark\">\r\n        <tr>\r\n          <th scope=\"col\">Month</th>\r\n          <th scope=\"col\">Time In</th>\r\n          <th scope=\"col\">Time Out</th>\r\n          <th scope=\"col\">Hours</th>\r\n          <th scope=\"col\">Notes</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {daysOfMonth && daysOfMonth.map((day, cell) => {\r\n          return (\r\n            <tr key={day}>\r\n              <th scope=\"row\">{day}</th>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n            </tr>\r\n          )\r\n        })}\r\n      </tbody>\r\n\r\n\r\n\r\n    </table>\r\n\r\n  )\r\n}\r\n\r\nexport default Grid"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAGA,MAAMC,IAAI,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAACC,KAAD;IAAOC;EAAP,CAAiB;EAC7B,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACO,EAAD,EAAKC,KAAL,IAAcR,QAAQ,CAACG,KAAD,CAA5B;EAEFF,SAAS,CAAC,MAAM;IACdQ,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBP,KAApB,EADc,CAEd;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACD,CAdQ,EAcP,CAACA,KAAD,EAAQC,IAAR,CAdO,CAAT,CAJ+B,CAoB/B;;EAEE,oBACE;IAAO,SAAS,EAAC,OAAjB;IAAA,wBACE;MAAO,SAAS,EAAC,YAAjB;MAAA,uBACE;QAAA,wBACE;UAAI,KAAK,EAAC,KAAV;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAI,KAAK,EAAC,KAAV;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAI,KAAK,EAAC,KAAV;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHF,eAIE;UAAI,KAAK,EAAC,KAAV;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJF,eAKE;UAAI,KAAK,EAAC,KAAV;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAUE;MAAA,UACGC,WAAW,IAAIA,WAAW,CAACM,GAAZ,CAAgB,CAACC,GAAD,EAAMC,IAAN,KAAe;QAC7C,oBACE;UAAA,wBACE;YAAI,KAAK,EAAC,KAAV;YAAA,UAAiBD;UAAjB;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE;YAAA;YAAA;YAAA;UAAA,QAHF,eAIE;YAAA;YAAA;YAAA;UAAA,QAJF,eAKE;YAAA;YAAA;YAAA;UAAA,QALF;QAAA,GAASA,GAAT;UAAA;UAAA;UAAA;QAAA,QADF;MASD,CAVe;IADlB;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA8BD,CApDD;;GAAMV,I;;KAAAA,I;AAsDN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}