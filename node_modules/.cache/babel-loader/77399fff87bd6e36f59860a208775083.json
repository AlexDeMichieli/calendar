{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aless\\\\Desktop\\\\Calendar-app\\\\calendar-app\\\\src\\\\components\\\\Grid.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Grid = _ref => {\n  _s();\n\n  let {\n    allDaysOfMonth\n  } = _ref;\n  const [timeIn, setTimeIn] = useState({});\n  const [timeOut, setTimeOut] = useState({});\n  const [hours, setHours] = useState([]);\n\n  const calculateTime = () => {\n    let total = [];\n    const cellHours = document.getElementsByClassName('hours'); // for (let i = 0; i < cellHours.length; i++) {\n    //   let formattedHours = parseInt(cellHours[i].innerHTML)\n    //   // if (isNaN(formattedHours)) {\n    //   //   formattedHours = 0\n    //   // }\n    //   total.push(formattedHours)\n    // }\n\n    console.log(cellHours[0].innerHTML); // const sum = total.reduce((accumulator, value) => {\n    //   if (isNaN(value)) {\n    //     value = 0\n    //   }\n    //   console.log(value)\n    //   return accumulator + value;\n    // }, 0);\n    // return sum\n  };\n\n  const enterTimeIn = (e, cell, day) => {\n    console.log(e, cell, day);\n    setTimeIn(state => {\n      return { ...state,\n        [cell]: `${day} ${e.target.value}`\n      };\n    });\n  };\n\n  const enterTimeOut = (e, cell, day) => {\n    setTimeOut(state => {\n      return { ...state,\n        [cell]: `${day} ${e.target.value}`\n      };\n    });\n  };\n\n  const enterNotes = () => {};\n\n  const isWeekend = day => {\n    let currentDay = moment(day).format('LLLL');\n\n    if (currentDay.includes(\"Sat\") || currentDay.includes(\"Sun\")) {\n      return true;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"thead-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Time In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Time Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Hours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: allDaysOfMonth && allDaysOfMonth.map((day, cell) => {\n          const total = [];\n          let date1 = moment(timeIn[cell]);\n          let date2 = moment(timeOut[cell]);\n          let diff = date2.diff(date1);\n          let computedHours = moment.utc(diff).format('H.mm');\n          total.push(computedHours);\n          const sum = total.reduce((accumulator, value) => {\n            if (isNaN(value)) {\n              value = 0;\n            }\n\n            return accumulator + value;\n          }, 0);\n          console.log(sum);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"timeIn\",\n              style: {\n                background: isWeekend(day) ? 'grey' : 'white'\n              },\n              children: !isWeekend(day) && /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => enterTimeIn(e, cell, day),\n                className: \"form-control\",\n                type: \"text\",\n                placeholder: \"Time In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 118\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"timeOut\",\n              style: {\n                background: isWeekend(day) ? 'grey' : 'white'\n              },\n              children: !isWeekend(day) && /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => enterTimeOut(e, cell, day),\n                className: \"form-control\",\n                type: \"text\",\n                placeholder: \"Time Out\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 119\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"hours\",\n              style: {\n                background: isWeekend(day) ? 'grey' : 'white'\n              },\n              children: !isWeekend(day) && computedHours\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"notes\",\n              style: {\n                background: isWeekend(day) ? 'grey' : 'white'\n              },\n              children: !isWeekend(day) && /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => enterNotes(e, cell),\n                className: \"form-control\",\n                type: \"text\",\n                placeholder: \"Notes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 117\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)]\n          }, cell, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Grid, \"y0ySf1ZcnI52CA0Kkk9lSsYH3kw=\");\n\n_c = Grid;\nexport default Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useState","moment","Grid","allDaysOfMonth","timeIn","setTimeIn","timeOut","setTimeOut","hours","setHours","calculateTime","total","cellHours","document","getElementsByClassName","console","log","innerHTML","enterTimeIn","e","cell","day","state","target","value","enterTimeOut","enterNotes","isWeekend","currentDay","format","includes","map","date1","date2","diff","computedHours","utc","push","sum","reduce","accumulator","isNaN","background"],"sources":["C:/Users/aless/Desktop/Calendar-app/calendar-app/src/components/Grid.js"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\nimport moment from 'moment'\r\n\r\n\r\nconst Grid = ({ allDaysOfMonth }) => {\r\n  const [timeIn, setTimeIn] = useState({})\r\n  const [timeOut, setTimeOut] = useState({})\r\n  const [hours, setHours] = useState([])\r\n\r\n  const calculateTime = () => {\r\n    let total = []\r\n    const cellHours = document.getElementsByClassName('hours')\r\n    // for (let i = 0; i < cellHours.length; i++) {\r\n    //   let formattedHours = parseInt(cellHours[i].innerHTML)\r\n    //   // if (isNaN(formattedHours)) {\r\n    //   //   formattedHours = 0\r\n    //   // }\r\n    //   total.push(formattedHours)\r\n    // }\r\n    console.log(cellHours[0].innerHTML)\r\n    // const sum = total.reduce((accumulator, value) => {\r\n    //   if (isNaN(value)) {\r\n    //     value = 0\r\n    //   }\r\n    //   console.log(value)\r\n    //   return accumulator + value;\r\n    // }, 0);\r\n  \r\n    // return sum\r\n  }\r\n\r\n  const enterTimeIn = (e, cell, day) => {\r\n    console.log(e, cell, day)\r\n    setTimeIn((state) => {\r\n      return {\r\n        ...state,\r\n        [cell]: `${day} ${e.target.value}`\r\n      };\r\n    });\r\n  }\r\n\r\n  const enterTimeOut = (e, cell, day) => {\r\n    setTimeOut((state) => {\r\n      return {\r\n        ...state,\r\n        [cell]: `${day} ${e.target.value}`\r\n      };\r\n    });\r\n  }\r\n\r\n  const enterNotes = () => {\r\n\r\n  }\r\n\r\n\r\n  const isWeekend = (day) => {\r\n    let currentDay = moment(day).format('LLLL')\r\n    if (currentDay.includes(\"Sat\") || currentDay.includes(\"Sun\")) {\r\n      return true\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className='container'>\r\n      <table className=\"table\">\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            <th scope=\"col\">Month</th>\r\n            <th scope=\"col\">Time In</th>\r\n            <th scope=\"col\">Time Out</th>\r\n            <th scope=\"col\">Hours</th>\r\n            <th scope=\"col\">Notes</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {allDaysOfMonth && allDaysOfMonth.map((day, cell) => {\r\n            const total = []\r\n            let date1 = moment(timeIn[cell]);\r\n            let date2 = moment(timeOut[cell]);\r\n            let diff = date2.diff(date1);\r\n            let computedHours = moment.utc(diff).format('H.mm')\r\n            total.push(computedHours)\r\n            const sum = total.reduce((accumulator, value) => {\r\n      if (isNaN(value)) {\r\n        value = 0\r\n      }\r\n      return accumulator + value;\r\n    }, 0);\r\n    console.log(sum)\r\n            \r\n            return (\r\n\r\n              <tr key={cell}>\r\n                <th scope=\"row\">{day}</th>\r\n                <td className='timeIn' style={{ background: isWeekend(day) ? 'grey' : 'white' }}>{!isWeekend(day) && <input onChange={(e) => enterTimeIn(e, cell, day)} className=\"form-control\" type=\"text\" placeholder=\"Time In\" />}</td>\r\n                <td className='timeOut' style={{ background: isWeekend(day) ? 'grey' : 'white' }}>{!isWeekend(day) && <input onChange={(e) => enterTimeOut(e, cell, day)} className=\"form-control\" type=\"text\" placeholder=\"Time Out\" />}</td>\r\n                <td className='hours' style={{ background: isWeekend(day) ? 'grey' : 'white' }}>{!isWeekend(day) && computedHours}</td>\r\n                <td className='notes' style={{ background: isWeekend(day) ? 'grey' : 'white' }}>{!isWeekend(day) && <input onChange={(e) => enterNotes(e, cell)} className=\"form-control\" type=\"text\" placeholder=\"Notes\" />}</td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      {/* <p>{calculateTime()}</p> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Grid"],"mappings":"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"},"metadata":{},"sourceType":"module"}