{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aless\\\\Desktop\\\\Calendar-app\\\\calendar-app\\\\src\\\\components\\\\Grid.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Grid = _ref => {\n  _s();\n\n  var _ref2;\n\n  let {\n    allDaysOfMonth,\n    prefillTime\n  } = _ref;\n  console.log(prefillTime);\n  const [timeIn, setTimeIn] = useState((_ref2 = {}) !== null && _ref2 !== void 0 ? _ref2 : prefillTime.timeIn);\n  const [timeOut, setTimeOut] = useState({} || prefillTime.timeOut);\n\n  const computeHours = (timeIn, timeOut, cell) => {\n    let start = moment(timeIn[cell]);\n    let end = moment(timeOut[cell]);\n    let diff = end.diff(start);\n    let computedHours = moment.utc(diff).format('H.mm');\n    return computedHours;\n  };\n\n  const calculateTime = () => {\n    const total = [];\n    let sum = 0;\n    Object.keys(timeIn).forEach(function (key) {\n      let sumOfRowHours = computeHours(timeIn, timeOut, key);\n      total.push(parseFloat(sumOfRowHours));\n    });\n\n    for (let i = 0; i < total.length; i++) {\n      console.log(total[i]);\n      sum += total[i];\n    }\n\n    return sum;\n  };\n\n  const enterTimeIn = (e, cell, day) => {\n    console.log(e, cell, day);\n    setTimeIn(state => {\n      return { ...state,\n        [cell]: `${day} ${e.target.value}`\n      };\n    });\n  };\n\n  const enterTimeOut = (e, cell, day) => {\n    setTimeOut(state => {\n      return { ...state,\n        [cell]: `${day} ${e.target.value}`\n      };\n    });\n  };\n\n  const enterNotes = () => {};\n\n  const isWeekend = day => {\n    let currentDay = moment(day).format('LLLL');\n\n    if (currentDay.includes(\"Sat\") || currentDay.includes(\"Sun\")) {\n      return true;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"thead-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Time In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Time Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Hours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: allDaysOfMonth && allDaysOfMonth.map((day, cell) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"timeIn\",\n              style: {\n                background: isWeekend(day) ? 'grey' : 'white'\n              },\n              children: !isWeekend(day) && /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => enterTimeIn(e, cell, day),\n                className: \"form-control\",\n                type: \"text\",\n                placeholder: \"Time In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 118\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"timeOut\",\n              style: {\n                background: isWeekend(day) ? 'grey' : 'white'\n              },\n              children: !isWeekend(day) && /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => enterTimeOut(e, cell, day),\n                className: \"form-control\",\n                type: \"text\",\n                placeholder: \"Time Out\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 119\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"hours\",\n              style: {\n                background: isWeekend(day) ? 'grey' : 'white'\n              },\n              children: !isWeekend(day) && computeHours(timeIn, timeOut, cell)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"notes\",\n              style: {\n                background: isWeekend(day) ? 'grey' : 'white'\n              },\n              children: !isWeekend(day) && /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => enterNotes(e, cell),\n                className: \"form-control\",\n                type: \"text\",\n                placeholder: \"Notes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 117\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)]\n          }, cell, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"text-center\",\n      children: [\"Sum: \", calculateTime()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Grid, \"ZjTi6XKrvnb9rBwUtV1df398MBw=\");\n\n_c = Grid;\nexport default Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useState","moment","Grid","allDaysOfMonth","prefillTime","console","log","timeIn","setTimeIn","timeOut","setTimeOut","computeHours","cell","start","end","diff","computedHours","utc","format","calculateTime","total","sum","Object","keys","forEach","key","sumOfRowHours","push","parseFloat","i","length","enterTimeIn","e","day","state","target","value","enterTimeOut","enterNotes","isWeekend","currentDay","includes","map","background"],"sources":["C:/Users/aless/Desktop/Calendar-app/calendar-app/src/components/Grid.js"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\nimport moment from 'moment'\r\n\r\n\r\nconst Grid = ({ allDaysOfMonth, prefillTime }) => {\r\n  console.log(prefillTime)\r\n\r\n  const [timeIn, setTimeIn] = useState({} ?? prefillTime.timeIn)\r\n  const [timeOut, setTimeOut] = useState({} || prefillTime.timeOut)\r\n\r\n  const computeHours = (timeIn, timeOut, cell) =>{\r\n    let start = moment(timeIn[cell]);\r\n    let end = moment(timeOut[cell]);\r\n    let diff = end.diff(start);\r\n    let computedHours = moment.utc(diff).format('H.mm')\r\n\r\n    return computedHours\r\n  }\r\n\r\n  const calculateTime = () => {\r\n    const total = []\r\n    let sum = 0\r\n\r\n    Object.keys(timeIn).forEach(function (key) {\r\n\r\n      let sumOfRowHours = computeHours(timeIn, timeOut, key)\r\n      total.push(parseFloat(sumOfRowHours))\r\n\r\n    });\r\n\r\n    for (let i = 0; i < total.length; i++) {\r\n      console.log(total[i])\r\n      sum += total[i]\r\n    }\r\n\r\n    return sum\r\n  }\r\n\r\n  const enterTimeIn = (e, cell, day) => {\r\n    console.log(e, cell, day)\r\n    setTimeIn((state) => {\r\n      return {\r\n        ...state,\r\n        [cell]: `${day} ${e.target.value}`\r\n      };\r\n    });\r\n  }\r\n\r\n  const enterTimeOut = (e, cell, day) => {\r\n    setTimeOut((state) => {\r\n      return {\r\n        ...state,\r\n        [cell]: `${day} ${e.target.value}`\r\n      };\r\n    });\r\n  }\r\n\r\n  const enterNotes = () => {\r\n\r\n  }\r\n\r\n\r\n  const isWeekend = (day) => {\r\n    let currentDay = moment(day).format('LLLL')\r\n    if (currentDay.includes(\"Sat\") || currentDay.includes(\"Sun\")) {\r\n      return true\r\n    }\r\n  }\r\n  return (\r\n    <div className='container'>\r\n      <table className=\"table\">\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            <th scope=\"col\">Month</th>\r\n            <th scope=\"col\">Time In</th>\r\n            <th scope=\"col\">Time Out</th>\r\n            <th scope=\"col\">Hours</th>\r\n            <th scope=\"col\">Notes</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {allDaysOfMonth && allDaysOfMonth.map((day, cell) => {\r\n       \r\n            return (\r\n              <tr key={cell}>\r\n                <th scope=\"row\">{day}</th>\r\n                <td className='timeIn' style={{ background: isWeekend(day) ? 'grey' : 'white' }}>{!isWeekend(day) && <input onChange={(e) => enterTimeIn(e, cell, day)} className=\"form-control\" type=\"text\" placeholder=\"Time In\" />}</td>\r\n                <td className='timeOut' style={{ background: isWeekend(day) ? 'grey' : 'white' }}>{!isWeekend(day) && <input onChange={(e) => enterTimeOut(e, cell, day)} className=\"form-control\" type=\"text\" placeholder=\"Time Out\" />}</td>\r\n                <td className='hours' style={{ background: isWeekend(day) ? 'grey' : 'white' }}>{!isWeekend(day) && computeHours(timeIn, timeOut, cell)}</td>\r\n                <td className='notes' style={{ background: isWeekend(day) ? 'grey' : 'white' }}>{!isWeekend(day) && <input onChange={(e) => enterNotes(e, cell)} className=\"form-control\" type=\"text\" placeholder=\"Notes\" />}</td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <h4 className='text-center'>Sum: {calculateTime()}</h4>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Grid"],"mappings":"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"},"metadata":{},"sourceType":"module"}