{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aless\\\\Desktop\\\\Calendar-app\\\\calendar-app\\\\src\\\\components\\\\Grid.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Grid = _ref => {\n  _s();\n\n  let {\n    allDaysOfMonth\n  } = _ref;\n  const timeIn = useRef();\n  const timeOut = useRef();\n\n  const calculateTime = () => {\n    const a = timeIn.current;\n    const b = timeOut.current; //console.log(parseInt(a) + parseInt(b))\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      className: \"thead-dark\",\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"Time In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"Time Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"Hours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: allDaysOfMonth && allDaysOfMonth.map((day, cell) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"row\",\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            ref: timeIn,\n            value: 1,\n            className: \"timeIn\",\n            style: {\n              background: day.includes(\"Sat\") || day.includes(\"Sun\") ? 'grey' : 'white'\n            },\n            children: day.includes(\"Sat\") || day.includes(\"Sun\") ? \"\" : \"3:30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            ref: timeOut,\n            value: 3,\n            className: \"timeOut\",\n            style: {\n              background: day.includes(\"Sat\") || day.includes(\"Sun\") ? 'grey' : 'white'\n            },\n            children: day.includes(\"Sat\") || day.includes(\"Sun\") ? \"\" : \"9:36\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: calculateTime()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)]\n        }, cell, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Grid, \"lfd+jAAtA5JdFiylkvgGpo9d7JE=\");\n\n_c = Grid;\nexport default Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useState","useRef","Grid","allDaysOfMonth","timeIn","timeOut","calculateTime","a","current","b","map","day","cell","background","includes"],"sources":["C:/Users/aless/Desktop/Calendar-app/calendar-app/src/components/Grid.js"],"sourcesContent":["import React from 'react'\r\nimport { useState, useRef } from 'react'\r\n\r\n\r\nconst Grid = ({allDaysOfMonth}) => {\r\n  const timeIn = useRef();\r\n  const timeOut = useRef();\r\n\r\n  const calculateTime = () =>{\r\n    const a = timeIn.current;\r\n    const b = timeOut.current;\r\n    //console.log(parseInt(a) + parseInt(b))\r\n  }\r\n  return (\r\n    <table className=\"table\">\r\n      <thead className=\"thead-dark\">\r\n        <tr>\r\n          <th scope=\"col\">Month</th>\r\n          <th scope=\"col\">Time In</th>\r\n          <th scope=\"col\">Time Out</th>\r\n          <th scope=\"col\">Hours</th>\r\n          <th scope=\"col\">Notes</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {allDaysOfMonth && allDaysOfMonth.map((day, cell) => {\r\n          return (\r\n            <tr key={cell}>\r\n              <th scope=\"row\">{day}</th>\r\n              <td ref={timeIn} value = {1} className='timeIn' style={{background: day.includes(\"Sat\") || day.includes(\"Sun\") ? 'grey' : 'white' }}>{day.includes(\"Sat\") || day.includes(\"Sun\") ? \"\" : \"3:30\" }</td>\r\n              <td ref={timeOut} value={3} className='timeOut'style={{background: day.includes(\"Sat\") || day.includes(\"Sun\") ? 'grey' : 'white' }}>{day.includes(\"Sat\") || day.includes(\"Sun\") ? \"\" : \"9:36\" }</td>\r\n              <td>{calculateTime()}</td>\r\n              <td></td>\r\n            </tr>\r\n          )\r\n        })}\r\n      </tbody>\r\n\r\n\r\n\r\n    </table>\r\n\r\n  )\r\n}\r\n\r\nexport default Grid"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;;;AAGA,MAAMC,IAAI,GAAG,QAAsB;EAAA;;EAAA,IAArB;IAACC;EAAD,CAAqB;EACjC,MAAMC,MAAM,GAAGH,MAAM,EAArB;EACA,MAAMI,OAAO,GAAGJ,MAAM,EAAtB;;EAEA,MAAMK,aAAa,GAAG,MAAK;IACzB,MAAMC,CAAC,GAAGH,MAAM,CAACI,OAAjB;IACA,MAAMC,CAAC,GAAGJ,OAAO,CAACG,OAAlB,CAFyB,CAGzB;EACD,CAJD;;EAKA,oBACE;IAAO,SAAS,EAAC,OAAjB;IAAA,wBACE;MAAO,SAAS,EAAC,YAAjB;MAAA,uBACE;QAAA,wBACE;UAAI,KAAK,EAAC,KAAV;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAI,KAAK,EAAC,KAAV;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAI,KAAK,EAAC,KAAV;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHF,eAIE;UAAI,KAAK,EAAC,KAAV;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJF,eAKE;UAAI,KAAK,EAAC,KAAV;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAUE;MAAA,UACGL,cAAc,IAAIA,cAAc,CAACO,GAAf,CAAmB,CAACC,GAAD,EAAMC,IAAN,KAAe;QACnD,oBACE;UAAA,wBACE;YAAI,KAAK,EAAC,KAAV;YAAA,UAAiBD;UAAjB;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAI,GAAG,EAAEP,MAAT;YAAiB,KAAK,EAAI,CAA1B;YAA6B,SAAS,EAAC,QAAvC;YAAgD,KAAK,EAAE;cAACS,UAAU,EAAEF,GAAG,CAACG,QAAJ,CAAa,KAAb,KAAuBH,GAAG,CAACG,QAAJ,CAAa,KAAb,CAAvB,GAA6C,MAA7C,GAAsD;YAAnE,CAAvD;YAAA,UAAsIH,GAAG,CAACG,QAAJ,CAAa,KAAb,KAAuBH,GAAG,CAACG,QAAJ,CAAa,KAAb,CAAvB,GAA6C,EAA7C,GAAkD;UAAxL;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE;YAAI,GAAG,EAAET,OAAT;YAAkB,KAAK,EAAE,CAAzB;YAA4B,SAAS,EAAC,SAAtC;YAA+C,KAAK,EAAE;cAACQ,UAAU,EAAEF,GAAG,CAACG,QAAJ,CAAa,KAAb,KAAuBH,GAAG,CAACG,QAAJ,CAAa,KAAb,CAAvB,GAA6C,MAA7C,GAAsD;YAAnE,CAAtD;YAAA,UAAqIH,GAAG,CAACG,QAAJ,CAAa,KAAb,KAAuBH,GAAG,CAACG,QAAJ,CAAa,KAAb,CAAvB,GAA6C,EAA7C,GAAkD;UAAvL;YAAA;YAAA;YAAA;UAAA,QAHF,eAIE;YAAA,UAAKR,aAAa;UAAlB;YAAA;YAAA;YAAA;UAAA,QAJF,eAKE;YAAA;YAAA;YAAA;UAAA,QALF;QAAA,GAASM,IAAT;UAAA;UAAA;UAAA;QAAA,QADF;MASD,CAVkB;IADrB;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA8BD,CAvCD;;GAAMV,I;;KAAAA,I;AAyCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}