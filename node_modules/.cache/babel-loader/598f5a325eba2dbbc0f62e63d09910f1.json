{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aless\\\\Desktop\\\\Calendar-app\\\\calendar-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Grid from './components/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [month, setMonth] = useState(new Date().getMonth());\n  const [year, setYear] = useState(new Date().getFullYear());\n  const [allDaysOfMonth, setAllDaysOfMonth] = useState([]);\n  useEffect(() => {\n    console.log(\"month\", month);\n    console.log(\"year\", year); // const daysOfMonth = (month, year) => {\n    //   let date = new Date(year, month, 1);\n    //   let days = [];\n    //   while (date.getMonth() === month) {\n    //     let day = new Date(date).toLocaleDateString()\n    //     days.push(day);\n    //     date.setDate(date.getDate() + 1);\n    //   }\n    //   console.log(days)\n    //   setAllDaysOfMonth(days);\n    // }\n    // daysOfMonth(month)\n    // console.log('all days',month, year, daysOfMonth(month, year))\n\n    function getDaysInMonth(year, month) {\n      return new Date(year, month, 0).getDate();\n    }\n\n    const date = new Date();\n    const currentYear = date.getFullYear();\n    const currentMonth = date.getMonth() + 1;\n    console.log(\"wgwgwegweg\", currentMonth);\n    const daysInCurrentMonth = getDaysInMonth(currentYear, currentMonth);\n    setAllDaysOfMonth(Array.from({\n      length: daysInCurrentMonth\n    }, (v, k) => k + 1));\n    getDaysInMonth(year, month);\n  }, [month, year]);\n  const monthsOfYear = [\"January\", \"February\", \"March\", \"April\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n  const yearsToCome = () => {\n    let currentYear = new Date().getFullYear();\n    return [...Array(2050 - currentYear + 1).keys()].map(i => i + currentYear);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Time Sheet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setMonth(e.target.value),\n          className: \"form-select\",\n          \"aria-label\": \"Default select example\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            defaultValue: true,\n            children: \"Select Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), monthsOfYear.map(month => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              name: month,\n              value: month,\n              children: month\n            }, month, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 22\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setYear(e.target.value),\n          className: \"form-select\",\n          \"aria-label\": \"Default select example\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            defaultValue: true,\n            children: \"Select Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), yearsToCome().map(year => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              name: year,\n              value: year,\n              children: year\n            }, year, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 22\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      allDaysOfMonth: allDaysOfMonth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rpUFRLUqNgVD2UWxiQ/XxTQJAMk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Grid","App","month","setMonth","Date","getMonth","year","setYear","getFullYear","allDaysOfMonth","setAllDaysOfMonth","console","log","getDaysInMonth","getDate","date","currentYear","currentMonth","daysInCurrentMonth","Array","from","length","v","k","monthsOfYear","yearsToCome","keys","map","i","e","target","value"],"sources":["C:/Users/aless/Desktop/Calendar-app/calendar-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Grid from './components/Grid';\n\n\nfunction App() {\n  const [month, setMonth] = useState(new Date().getMonth());\n  const [year, setYear] = useState(new Date().getFullYear())\n  const [allDaysOfMonth, setAllDaysOfMonth]= useState([])\n  \nuseEffect(() => {\n  console.log(\"month\",month)\n  console.log(\"year\", year)\n  \n  // const daysOfMonth = (month, year) => {\n  //   let date = new Date(year, month, 1);\n  //   let days = [];\n  //   while (date.getMonth() === month) {\n  //     let day = new Date(date).toLocaleDateString()\n  //     days.push(day);\n  //     date.setDate(date.getDate() + 1);\n  //   }\n  //   console.log(days)\n  //   setAllDaysOfMonth(days);\n  // }\n  // daysOfMonth(month)\n  // console.log('all days',month, year, daysOfMonth(month, year))\n\n  function getDaysInMonth(year, month) {\n    return new Date(year, month, 0).getDate();\n  }\n  \n  const date = new Date();\n  const currentYear = date.getFullYear();\n  const currentMonth = date.getMonth() + 1;\n  console.log(\"wgwgwegweg\", currentMonth)\n\n  const daysInCurrentMonth = getDaysInMonth(currentYear, currentMonth);\n  setAllDaysOfMonth(Array.from({length:daysInCurrentMonth},(v,k)=>k+1)\n  );\n  getDaysInMonth(year, month)\n},[month,year]);\n\n\n  const monthsOfYear = [\"January\", \"February\", \"March\", \"April\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n  const yearsToCome = () => {\n    let currentYear = new Date().getFullYear()\n    return [...Array(2050 - currentYear + 1).keys()].map(i => i + currentYear);\n  }\n  \n  return (\n    <div className=\"container\">\n      <h1>Time Sheet</h1>\n      <div className=\"row\">\n        <div className=\"col\">\n          <select onChange={(e) => setMonth(e.target.value)} className=\"form-select\" aria-label=\"Default select example\">\n            <option defaultValue>Select Month</option>\n            {monthsOfYear.map(month => {\n              return <option key={month} name={month} value={month}>{month}</option>\n            })}\n          </select>\n        </div>\n        <div className=\"col\">\n          <select onChange={(e) => setYear(e.target.value)}className=\"form-select\" aria-label=\"Default select example\">\n            <option defaultValue>Select Year</option>\n            {yearsToCome().map(year => {\n              return <option key={year} name={year} value={year}>{year}</option>\n            })}\n          </select>\n        </div>\n      </div>\n      <Grid allDaysOfMonth={allDaysOfMonth}></Grid>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}