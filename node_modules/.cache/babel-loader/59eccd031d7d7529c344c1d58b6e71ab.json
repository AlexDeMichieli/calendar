{"ast":null,"code":"var _jsxFileName = \"/Users/alexander/Desktop/calendar-app/src/components/Grid.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Grid = _ref => {\n  _s();\n\n  let {\n    allDaysOfMonth,\n    prefillTime\n  } = _ref;\n  const [timeIn, setTimeIn] = useState({});\n  const [timeOut, setTimeOut] = useState({}); //console.log(prefillTime)\n\n  useEffect(() => {\n    //console.log(allDaysOfMonth)\n    allDaysOfMonth.map((item, index) => {\n      setTimeIn(state => {\n        return { ...state,\n          [index]: `${item} ${prefillTime.timeIn}`\n        };\n      });\n      setTimeOut(state => {\n        return { ...state,\n          [index]: `${item} ${prefillTime.timeOut}`\n        };\n      });\n    });\n  }, [prefillTime]);\n  console.log(timeIn);\n\n  const computeHours = (timeIn, timeOut, cell) => {\n    let start = moment(timeIn[cell]);\n    let end = moment(timeOut[cell]);\n    let diff = end.diff(start);\n    let computedHours = moment.utc(diff).format(\"LT\");\n    return computedHours;\n  };\n\n  const calculateTime = () => {\n    const total = [];\n    let sum = 0;\n    Object.keys(timeIn).forEach(function (key) {\n      let sumOfRowHours = computeHours(timeIn, timeOut, key);\n      total.push(parseFloat(sumOfRowHours));\n    });\n\n    for (let i = 0; i < total.length; i++) {\n      console.log(total[i]);\n      sum += total[i];\n    }\n\n    return sum;\n  };\n\n  const enterTimeIn = (e, cell, day, preFillDates) => {\n    setTimeIn(state => {\n      return { ...state,\n        [cell]: `${day} ${e.target.value}`\n      };\n    });\n  };\n\n  const enterTimeOut = (e, cell, day) => {\n    setTimeOut(state => {\n      return { ...state,\n        [cell]: `${day} ${e.target.value}`\n      };\n    });\n  };\n\n  const enterNotes = () => {};\n\n  const isWeekend = day => {\n    let currentDay = moment(day).format(\"LLLL\");\n\n    if (currentDay.includes(\"Sat\") || currentDay.includes(\"Sun\")) {\n      return true;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"thead-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Time In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Time Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Hours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: allDaysOfMonth && allDaysOfMonth.map((day, cell) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                background: isWeekend(day) ? \"grey\" : \"white\"\n              },\n              children: !isWeekend(day) && /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"timeIn\",\n                onChange: e => enterTimeIn(e, cell, day),\n                defaultValue: timeIn[cell],\n                className: \"form-control\",\n                type: \"text\",\n                placeholder: \"Time In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                background: isWeekend(day) ? \"grey\" : \"white\"\n              },\n              children: !isWeekend(day) && /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"timeOut\",\n                onChange: e => enterTimeOut(e, cell, day),\n                defaultValue: timeOut[cell],\n                className: \"form-control\",\n                type: \"text\",\n                placeholder: \"Time Out\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"hours\",\n              style: {\n                background: isWeekend(day) ? \"grey\" : \"white\"\n              },\n              children: !isWeekend(day) && computeHours(timeIn, timeOut, cell)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"notes\",\n              style: {\n                background: isWeekend(day) ? \"grey\" : \"white\"\n              },\n              children: !isWeekend(day) && /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => enterNotes(e, cell),\n                className: \"form-control\",\n                type: \"text\",\n                placeholder: \"Notes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this)]\n          }, cell, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"text-center\",\n      children: [\"Sum: \", calculateTime()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Grid, \"uIlAdPv9DZhyAshp6CSX/aW1UQw=\");\n\n_c = Grid;\nexport default Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useState","useEffect","moment","Grid","allDaysOfMonth","prefillTime","timeIn","setTimeIn","timeOut","setTimeOut","map","item","index","state","console","log","computeHours","cell","start","end","diff","computedHours","utc","format","calculateTime","total","sum","Object","keys","forEach","key","sumOfRowHours","push","parseFloat","i","length","enterTimeIn","e","day","preFillDates","target","value","enterTimeOut","enterNotes","isWeekend","currentDay","includes","background"],"sources":["/Users/alexander/Desktop/calendar-app/src/components/Grid.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport moment from \"moment\";\n\nconst Grid = ({ allDaysOfMonth, prefillTime }) => {\n  const [timeIn, setTimeIn] = useState({});\n  const [timeOut, setTimeOut] = useState({});\n  //console.log(prefillTime)\n\n  useEffect(() => {\n    //console.log(allDaysOfMonth)\n    allDaysOfMonth.map((item, index) => {\n      setTimeIn((state) => {\n        return {\n          ...state,\n          [index]: `${item} ${prefillTime.timeIn}`,\n        };\n      });\n\n      setTimeOut((state) => {\n        return {\n          ...state,\n          [index]: `${item} ${prefillTime.timeOut}`,\n        };\n      });\n    });\n  }, [prefillTime]);\n  console.log(timeIn);\n\n  const computeHours = (timeIn, timeOut, cell) => {\n    let start = moment(timeIn[cell]);\n    let end = moment(timeOut[cell]);\n    let diff = end.diff(start);\n    let computedHours = moment.utc(diff).format(\"LT\");\n\n    return computedHours;\n  };\n\n  const calculateTime = () => {\n    const total = [];\n    let sum = 0;\n\n    Object.keys(timeIn).forEach(function (key) {\n      let sumOfRowHours = computeHours(timeIn, timeOut, key);\n      total.push(parseFloat(sumOfRowHours));\n    });\n\n    for (let i = 0; i < total.length; i++) {\n      console.log(total[i]);\n      sum += total[i];\n    }\n\n    return sum;\n  };\n\n  const enterTimeIn = (e, cell, day, preFillDates) => {\n    setTimeIn((state) => {\n      return {\n        ...state,\n        [cell]: `${day} ${e.target.value}`,\n      };\n    });\n  };\n\n  const enterTimeOut = (e, cell, day) => {\n    setTimeOut((state) => {\n      return {\n        ...state,\n        [cell]: `${day} ${e.target.value}`,\n      };\n    });\n  };\n\n  const enterNotes = () => {};\n\n  const isWeekend = (day) => {\n    let currentDay = moment(day).format(\"LLLL\");\n    if (currentDay.includes(\"Sat\") || currentDay.includes(\"Sun\")) {\n      return true;\n    }\n  };\n  return (\n    <div className=\"container\">\n      <table className=\"table\">\n        <thead className=\"thead-dark\">\n          <tr>\n            <th scope=\"col\">Month</th>\n            <th scope=\"col\">Time In</th>\n            <th scope=\"col\">Time Out</th>\n            <th scope=\"col\">Hours</th>\n            <th scope=\"col\">Notes</th>\n          </tr>\n        </thead>\n        <tbody>\n          {allDaysOfMonth &&\n            allDaysOfMonth.map((day, cell) => {\n              return (\n                <tr key={cell}>\n                  <th scope=\"row\">{day}</th>\n                  <td style={{ background: isWeekend(day) ? \"grey\" : \"white\" }}>\n                    {!isWeekend(day) && (\n                      <input\n                        className=\"timeIn\"\n                        onChange={(e) => enterTimeIn(e, cell, day)}\n                        defaultValue={timeIn[cell]}\n                        className=\"form-control\"\n                        type=\"text\"\n                        placeholder=\"Time In\"\n                      />\n                    )}\n                  </td>\n                  <td style={{ background: isWeekend(day) ? \"grey\" : \"white\" }}>\n                    {!isWeekend(day) && (\n                      <input\n                        className=\"timeOut\"\n                        onChange={(e) => enterTimeOut(e, cell, day)}\n                        defaultValue={timeOut[cell]}\n                        className=\"form-control\"\n                        type=\"text\"\n                        placeholder=\"Time Out\"\n                      />\n                    )}\n                  </td>\n                  <td\n                    className=\"hours\"\n                    style={{ background: isWeekend(day) ? \"grey\" : \"white\" }}\n                  >\n                    {!isWeekend(day) && computeHours(timeIn, timeOut, cell)}\n                  </td>\n                  <td\n                    className=\"notes\"\n                    style={{ background: isWeekend(day) ? \"grey\" : \"white\" }}\n                  >\n                    {!isWeekend(day) && (\n                      <input\n                        onChange={(e) => enterNotes(e, cell)}\n                        className=\"form-control\"\n                        type=\"text\"\n                        placeholder=\"Notes\"\n                      />\n                    )}\n                  </td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n      <h4 className=\"text-center\">Sum: {calculateTime()}</h4>\n    </div>\n  );\n};\n\nexport default Grid;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}